
http://reactivex.io/documentation/operators.html


 // Four Types of Observable using From

 // convert various other objects and data types into Observables
    // 1. fromIterable
    // 2. fromArray
    // 3. fromCallable
    // 4.fromPublisher


# Types of  operators
   1. Transforming Operator
      1.1 Buffer   =>  periodically gather items from an Observable into bundles and emit these bundles rather than emitting the items one at a time
      1.1 Flatmap  =>  Transmit the item, After applying function to modify it BUT it returns observale, Doesn't maintain order
      1.1 GroupBy  =>  Make group based on criteria
      1.1 map      =>  Transmit the item, After applying function to modify it
      1.1 Scan     =>
      1.1 window   =>

   2. Filtering Operator
      2.1 Debounce  => Only emit an Item from Observale Only After certain amount has been passed
      2.2 Distinct  =>  Remove duplicates, Only Unique
      2.3 ElementAt  => Element At Index
      2.4 Filter    =>  Filter emitted stream based on some condition
      2.5 First
      2.6 Ignore Element  => Ignore element
      2.7 Last
      2.8 Sample
      2.9 Skip      => Ignore n elements from stream, Skip(6) -> skip first SIX elements
      2.10 SkipLast
      2.11 Take     => Take only n elements from stream
      2.12 TakeLast


   3. Combining Operator
      3.1 Combine Latest  =>  Combine the result of Two operator, combine the latest item emitted by each Observable, then result of the function emited
      3.2 Merge           =>  Merge stream from Multiple Observable, If Error from one of the stream then it will publsih error, Will maintain Order
      3.3 Zip             =>  Zip two observable events or emitted data
      3.4

   4. Observable Utility Operator
      4.1  Delay    => Observer subscribe immediately but receive data after delay time while in debounce Observable emits after defined amount of Time
      4.2  Do
      4.3  TimeStamp  => Attach Timestamp to each emitted Item
      4.4  TimeOut   => Time Out for Observable, If some items not emitted in particular time then ..

   5. Conditional/Boolean Operator
      5.1  All   => check all value/events based on condition
      5.2  Contains  => Check particular value on Observable
      5.3  Skip Until  => Skip X observable Until Y observable starts emit data
      5.4  Take Until  =>




   6. Connectable Operator



